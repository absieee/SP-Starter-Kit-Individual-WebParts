{"version":3,"sources":["propertyFields/collectionData/collectionNumberField/CollectionNumberField.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,6BAA+B;AAC/B,8GAAoE;AAIpE;IAA2C,yCAAyE;IAClH,+BAAY,KAAkC;QAA9C,YACE,kBAAM,KAAK,CAAC,SAKb;QASD;;;;;WAKG;QACK,iBAAW,GAAG,UAAO,KAA6B,EAAE,KAAsB;;;;;wBAC1E,QAAQ,GAAG,OAAO,KAAK,KAAK,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC;wBAClD,qBAAM,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,KAAK,EAAE,QAAQ,CAAC,EAAA;;wBAA1D,UAAU,GAAG,SAA6C;wBAChE,2BAA2B;wBAC3B,IAAI,CAAC,QAAQ,CAAC;4BACZ,YAAY,EAAE,UAAU;yBACzB,CAAC,CAAC;;;;aACJ,CAAA;QAzBC,KAAI,CAAC,KAAK,GAAG;YACX,YAAY,EAAE,EAAE;SACjB,CAAC;;IACJ,CAAC;IAED;;OAEG;IACI,kDAAkB,GAAzB;QACE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3E,CAAC;IAiBD;;OAEG;IACI,sCAAM,GAAb;QAAA,iBAcC;QAbC,MAAM,CAAC,CACL,6BAAK,SAAS,EAAK,qDAAM,CAAC,WAAW,UAAI,IAAI,CAAC,KAAK,CAAC,YAAY,GAAG,qDAAM,CAAC,YAAY,GAAG,EAAE,CAAE;YAC3F,+BAAO,IAAI,EAAC,QAAQ,EACb,IAAI,EAAC,YAAY,EACjB,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,WAAW,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,mBACrD,OAAO,mBACP,SAAS,mBACR,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,EAAE,kBAC3C,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,EACvC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,EAAE,EACjD,QAAQ,EAAE,UAAC,EAAE,IAAK,OAAA,KAAI,CAAC,WAAW,CAAC,KAAI,CAAC,KAAK,CAAC,KAAK,EAAE,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,EAAnD,CAAmD,GAAI,CAC5E,CACP,CAAC;IACJ,CAAC;IACH,4BAAC;AAAD,CAjDA,AAiDC,CAjD0C,KAAK,CAAC,SAAS,GAiDzD;AAjDY,sDAAqB","file":"propertyFields/collectionData/collectionNumberField/CollectionNumberField.js","sourcesContent":["import * as React from 'react';\nimport styles from '../PropertyFieldCollectionDataHost.module.scss';\nimport { ICollectionNumberFieldProps, ICollectionNumberFieldState } from '.';\nimport { ICustomCollectionField } from '..';\n\nexport class CollectionNumberField extends React.Component<ICollectionNumberFieldProps, ICollectionNumberFieldState> {\n  constructor(props: ICollectionNumberFieldProps) {\n    super(props);\n\n    this.state = {\n      errorMessage: ''\n    };\n  }\n\n  /**\n   * componentWillMount lifecycle hook\n   */\n  public componentWillMount(): void {\n    this.valueChange(this.props.field, this.props.item[this.props.field.id]);\n  }\n\n  /**\n   * Value change event handler\n   *\n   * @param field\n   * @param value\n   */\n  private valueChange = async (field: ICustomCollectionField, value: string | number) => {\n    const inputVal = typeof value === \"string\" ? parseInt(value) : value;\n    const validation = await this.props.fValidation(field, inputVal);\n    // Update the error message\n    this.setState({\n      errorMessage: validation\n    });\n  }\n\n  /**\n   * Default React render method\n   */\n  public render(): React.ReactElement<ICollectionNumberFieldProps> {\n    return (\n      <div className={`${styles.numberField} ${this.state.errorMessage ? styles.invalidField : \"\"}`}>\n        <input type=\"number\"\n               role=\"spinbutton\"\n               placeholder={this.props.field.placeholder || this.props.field.title}\n               aria-valuemax=\"99999\"\n               aria-valuemin=\"-999999\"\n               aria-valuenow={this.props.item[this.props.field.id] || ''}\n               aria-invalid={!!this.state.errorMessage}\n               value={this.props.item[this.props.field.id] || ''}\n               onChange={(ev) => this.valueChange(this.props.field, ev.target.value)} />\n      </div>\n    );\n  }\n}\n"],"sourceRoot":"../../../../src"}