{"version":3,"sources":["propertyFields/collectionData/collectionIconField/CollectionIconField.tsx"],"names":[],"mappings":";;;;;;;;;;;;AAAA,6BAA+B;AAC/B,8GAAoE;AAEpE,6EAA4E;AAC5E,mEAAkE;AAElE;IAAyC,uCAA8C;IAAvF;;IAeA,CAAC;IAbQ,oCAAM,GAAb;QAAA,iBAYC;QAXC,MAAM,CAAC,CACL,6BAAK,SAAS,EAAE,qDAAM,CAAC,SAAS;YAC9B,oBAAC,qBAAS,IAAC,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,WAAW,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,EACnE,SAAS,EAAE,qDAAM,CAAC,mBAAmB,EACrC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,EACvF,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,EACnC,SAAS,EAAE,UAAC,KAAK,IAAK,OAAA,KAAI,CAAC,KAAK,CAAC,cAAc,CAAC,KAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,EAAE,KAAK,CAAC,EAArD,CAAqD,EAC3E,iBAAiB,EAAE,UAAC,KAAK,IAAK,OAAA,KAAI,CAAC,KAAK,CAAC,WAAW,CAAC,KAAI,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,EAA/C,CAA+C,GAAI;YAC5F,oBAAC,WAAI,IAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,GAAI,CAChG,CACP,CAAC;IACJ,CAAC;IACH,0BAAC;AAAD,CAfA,AAeC,CAfwC,KAAK,CAAC,SAAS,GAevD;AAfY,kDAAmB","file":"propertyFields/collectionData/collectionIconField/CollectionIconField.js","sourcesContent":["import * as React from 'react';\nimport styles from '../PropertyFieldCollectionDataHost.module.scss';\nimport { ICollectionIconFieldProps } from '.';\nimport { TextField } from 'office-ui-fabric-react/lib/components/TextField';\nimport { Icon } from 'office-ui-fabric-react/lib/components/Icon';\n\nexport class CollectionIconField extends React.Component<ICollectionIconFieldProps, {}> {\n\n  public render(): React.ReactElement<ICollectionIconFieldProps> {\n    return (\n      <div className={styles.iconField}>\n        <TextField placeholder={this.props.field.placeholder || this.props.field.title}\n                   className={styles.collectionDataField}\n                   value={this.props.item[this.props.field.id] ? this.props.item[this.props.field.id] : \"\"}\n                   required={this.props.field.required}\n                   onChanged={(value) => this.props.fOnValueChange(this.props.field.id, value)}\n                   onGetErrorMessage={(value) => this.props.fValidation(this.props.field, value)} />\n        <Icon iconName={this.props.item[this.props.field.id] ? this.props.item[this.props.field.id] : \"\"} />\n      </div>\n    );\n  }\n}\n"],"sourceRoot":"../../../../src"}