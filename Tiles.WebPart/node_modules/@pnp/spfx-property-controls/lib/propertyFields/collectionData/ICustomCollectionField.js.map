{"version":3,"sources":["propertyFields/collectionData/ICustomCollectionField.ts"],"names":[],"mappings":";;AAyCA,IAAY,yBAOX;AAPD,WAAY,yBAAyB;IACnC,6EAAU,CAAA;IACV,6EAAM,CAAA;IACN,+EAAO,CAAA;IACP,iFAAQ,CAAA;IACR,qFAAU,CAAA;IACV,uEAAG,CAAA;AACL,CAAC,EAPW,yBAAyB,GAAzB,iCAAyB,KAAzB,iCAAyB,QAOpC","file":"propertyFields/collectionData/ICustomCollectionField.js","sourcesContent":["import { IDropdownOption } from 'office-ui-fabric-react/lib/Dropdown';\n\nexport interface ICustomCollectionField {\n  /**\n   * ID of the field.\n   */\n  id: string;\n  /**\n   * Title of the field. This will be used for the label in the table.\n   */\n  title: string;\n  /**\n   * Specifies the type of field to render.\n   */\n  type: CustomCollectionFieldType;\n  /**\n   * Specify if the field is required.\n   */\n  required?: boolean;\n  /**\n   * Dropdown options. Only nescessary when dropdown type is used.\n   */\n  options?: IDropdownOption[];\n  /**\n   * Input placeholder text.\n   */\n  placeholder?: string;\n  /**\n   * Default value for the field\n   */\n  defaultValue?: any;\n  /**\n   * The method is used to get the validation error message and determine whether the input value is valid or not.\n   *\n   * When it returns string:\n   * - If valid, it returns empty string.\n   * - If invalid, the field will show a red border\n   */\n  onGetErrorMessage?: (value: any) => string | Promise<string>;\n}\n\nexport enum CustomCollectionFieldType {\n  string = 1,\n  number,\n  boolean,\n  dropdown,\n  fabricIcon,\n  url\n}\n"],"sourceRoot":"../../../src"}