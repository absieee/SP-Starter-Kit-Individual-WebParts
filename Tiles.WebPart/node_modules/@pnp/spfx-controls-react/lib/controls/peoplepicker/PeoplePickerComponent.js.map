{"version":3,"sources":["controls/peoplepicker/PeoplePickerComponent.tsx"],"names":[],"mappings":"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","file":"controls/peoplepicker/PeoplePickerComponent.js","sourcesContent":["import * as strings from 'ControlStrings';\nimport * as React from 'react';\nimport { IPeoplePickerProps, IPeoplePickerState, IPeoplePickerUserItem } from './IPeoplePicker';\nimport { IPersonaProps } from 'office-ui-fabric-react/lib/Persona';\nimport { TooltipHost, DirectionalHint } from 'office-ui-fabric-react/lib/Tooltip';\nimport { IBasePickerSuggestionsProps } from 'office-ui-fabric-react/lib/Pickers';\nimport { NormalPeoplePicker } from 'office-ui-fabric-react/lib/components/pickers/PeoplePicker/PeoplePicker';\nimport { IPersonaWithMenu } from 'office-ui-fabric-react/lib/components/pickers/PeoplePicker/PeoplePickerItems/PeoplePickerItem.Props';\nimport { ValidationState } from 'office-ui-fabric-react/lib/Pickers';\nimport { MessageBar, MessageBarType } from 'office-ui-fabric-react/lib/MessageBar';\nimport { SPHttpClient } from '@microsoft/sp-http';\nimport styles from './PeoplePickerComponent.module.scss';\nimport * as telemetry from '../../common/telemetry';\nimport { assign } from 'office-ui-fabric-react/lib/Utilities';\nimport { IUsers } from './IUsers';\nimport { Label } from 'office-ui-fabric-react/lib/Label';\nimport { Environment, EnvironmentType } from \"@microsoft/sp-core-library\";\n\nconst suggestionProps: IBasePickerSuggestionsProps = {\n  suggestionsHeaderText: 'Suggested People',\n  noResultsFoundText: 'No results found',\n  loadingText: 'Loading'\n};\n\n/**\n* PeoplePicker component\n*/\nexport class PeoplePicker extends React.Component<IPeoplePickerProps, IPeoplePickerState> {\n\n  constructor(props: IPeoplePickerProps) {\n    super(props);\n\n    telemetry.track('ReactPeoplePicker', {\n      groupName: !!props.groupName,\n      name: !!props.groupName,\n      titleText: !!props.titleText\n    });\n\n    this.state = {\n      selectedPersons: [],\n      mostRecentlyUsedPersons: [],\n      currentSelectedPersons: [],\n      allPersons: [],\n      currentPicker: 0,\n      peoplePartTitle: \"\",\n      peoplePartTooltip : \"\",\n      isLoading : false,\n      showmessageerror: false\n    };\n  }\n\n  /**\n   * componentWillMount lifecycle hook\n   */\n  public componentWillMount(): void {\n    if (Environment.type === EnvironmentType.Local) {\n      // local mode\n      this._loadLocalWorkbenchUsers();\n    } else {\n      // online mode\n      // Load the users\n      this._thisLoadUsers();\n      }\n  }\n\n  /**\n   * Generate the user photo link\n   *\n   * @param value\n   */\n  private generateUserPhotoLink(value : string) : string {\n    return `https://outlook.office365.com/owa/service.svc/s/GetPersonaPhoto?email=${value}&UA=0&size=HR96x96`;\n  }\n\n  /**\n   * Retrieve the users for local demo and testing purposes\n   */\n  private async _loadLocalWorkbenchUsers(): Promise<void> {\n    let _fakeUsers: Array<IPeoplePickerUserItem> = new Array<IPeoplePickerUserItem>();\n\n    _fakeUsers.push({\n      id: \"10dfa208-d7d4-4aef-a7ea-f9e4bb1b85c1\",\n      imageUrl: \"\",\n      imageInitials: \"RF\",\n      primaryText: \"Roger Federer\",\n      secondaryText: \"roger@tennis.onmicrosoft.com\",\n      tertiaryText: \"\",\n      optionalText:\"\"\n    });\n    _fakeUsers.push({\n      id: \"10dfa208-d7d4-4aef-a7ea-f9e4bb1b85c2\",\n      imageUrl: \"\",\n      imageInitials: \"RN\",\n      primaryText: \"Rafael Nadal\",\n      secondaryText: \"rafael@tennis.onmicrosoft.com\",\n      tertiaryText: \"\",\n      optionalText:\"\"\n    });\n    _fakeUsers.push({\n      id: \"10dfa208-d7d4-4aef-a7ea-f9e4bb1b85c3\",\n      imageUrl: \"\",\n      imageInitials: \"ND\",\n      primaryText: \"Novak Djokovic\",\n      secondaryText: \"novak@tennis.onmicrosoft.com\",\n      tertiaryText: \"\",\n      optionalText:\"\"\n    });\n    _fakeUsers.push({\n      id: \"10dfa208-d7d4-4aef-a7ea-f9e4bb1b85c4\",\n      imageUrl: \"\",\n      imageInitials: \"JP\",\n      primaryText: \"Juan Martin del Potro\",\n      secondaryText: \"juanmartin@tennis.onmicrosoft.com\",\n      tertiaryText: \"\",\n      optionalText:\"\"\n    });\n\n    let personaList: IPersonaWithMenu[] = [];\n    for (const persona of _fakeUsers) {\n      let personaWithMenu: IPersonaWithMenu = {};\n      assign(personaWithMenu, persona);\n      personaList.push(personaWithMenu);\n    }\n\n    // update the current state\n    this.setState({\n      allPersons: _fakeUsers,\n      peoplePersonaMenu: personaList,\n      mostRecentlyUsedPersons: personaList.slice(0, 5),\n      showmessageerror: this.props.isRequired && this.state.selectedPersons.length === 0\n    });\n\n  }\n\n  /**\n   * Retrieve the users\n   */\n  private async _thisLoadUsers(): Promise<void> {\n    var stringVal = \"\";\n    if (this.props.groupName) {\n      stringVal = `/_api/web/sitegroups/GetByName('${this.props.groupName}')/users`;\n    } else {\n      stringVal = \"/_api/web/siteusers\";\n    }\n\n    // Create the rest API\n    const restApi = `${this.props.context.pageContext.web.absoluteUrl}${stringVal}`;\n\n    try {\n      // Call the API endpoint\n      const items: IUsers = await this.props.context.spHttpClient.get(restApi, SPHttpClient.configurations.v1).then(resp => resp.json());\n\n      // Check if items were retrieved\n      if (items && items.value && items.value.length > 0) {\n\n        let userValuesArray: Array<IPeoplePickerUserItem> = new Array<IPeoplePickerUserItem>();\n\n        // Loop over all the retrieved items\n        for (let i = 0; i < items.value.length; i++) {\n          userValuesArray.push({\n            id: items.value[i].Id.toString(),\n            imageUrl: this.generateUserPhotoLink(items.value[i].Email),\n            imageInitials: \"\",\n            primaryText: items.value[i].Title, // name\n            secondaryText: items.value[i].Email, // email\n            tertiaryText: \"\", // status\n            optionalText: \"\" // anything\n          });\n        }\n\n        // Set Default selected persons\n        let defaultUsers : any = [];\n        let defaultPeopleList: IPersonaWithMenu[] = [];\n        if (this.props.defaultSelectedUsers) {\n          defaultUsers = this.getDefaultUsers(userValuesArray, this.props.defaultSelectedUsers);\n          for (const persona of defaultUsers) {\n            let selectedPeople: IPersonaWithMenu = {};\n            assign(selectedPeople, persona);\n            defaultPeopleList.push(selectedPeople);\n          }\n        }\n\n        let personaList: IPersonaWithMenu[] = [];\n        for (const persona of userValuesArray) {\n          let personaWithMenu: IPersonaWithMenu = {};\n          assign(personaWithMenu, persona);\n          personaList.push(personaWithMenu);\n        }\n\n        // Update the current state\n        this.setState({\n          allPersons : userValuesArray,\n          selectedPersons : defaultPeopleList.length != 0 ? defaultPeopleList : [],\n          peoplePersonaMenu : personaList,\n          mostRecentlyUsedPersons : personaList.slice(0,5),\n          showmessageerror: this.props.isRequired && this.state.selectedPersons.length === 0\n        });\n      }\n    } catch (e) {\n      console.error(\"Error occured while fetching the users and setting selected users.\");\n    }\n  }\n\n  /**\n   * On persona item changed event\n   */\n  private _onPersonItemsChange = (items: any[]) => {\n    const { selectedItems } = this.props;\n\n    this.setState({\n      selectedPersons: items,\n      showmessageerror: items.length > 0 ? false : true\n    });\n\n    if (selectedItems) {\n      selectedItems(items);\n    }\n  }\n\n  /**\n   * Validates the user input\n   *\n   * @param input\n   */\n  private _validateInputPeople = (input: string) => {\n    if (input.indexOf('@') !== -1) {\n      return ValidationState.valid;\n    } else if (input.length > 1) {\n      return ValidationState.warning;\n    } else {\n      return ValidationState.invalid;\n    }\n  }\n\n  /**\n   * Returns the most recently used person\n   *\n   * @param currentPersonas\n   */\n  private _returnMostRecentlyUsedPerson = (currentPersonas: IPersonaProps[]): IPersonaProps[] => {\n    let { mostRecentlyUsedPersons } = this.state;\n    return this._removeDuplicates(mostRecentlyUsedPersons, currentPersonas);\n  }\n\n  /**\n   * On filter changed event\n   *\n   * @param filterText\n   * @param currentPersonas\n   * @param limitResults\n   */\n  private _onPersonFilterChanged = (filterText: string, currentPersonas: IPersonaProps[], limitResults?: number): IPersonaProps[] => {\n    if (filterText) {\n      let filteredPersonas: IPersonaProps[] = this._filterPersons(filterText);\n      filteredPersonas = this._removeDuplicates(filteredPersonas, currentPersonas);\n      filteredPersonas = limitResults ? filteredPersonas.splice(0, limitResults) : filteredPersonas;\n      return filteredPersonas;\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * Filter persons based on Name and Email (starting with and contains)\n   *\n   * @param filterText\n   */\n  private _filterPersons(filterText: string): IPersonaProps[] {\n    return this.state.peoplePersonaMenu.filter(item =>\n    this._doesTextStartWith(item.primaryText as string, filterText)\n    || this._doesTextContains(item.primaryText as string, filterText)\n    || this._doesTextStartWith(item.secondaryText as string, filterText)\n    || this._doesTextContains(item.secondaryText as string, filterText));\n  }\n\n\n  /**\n   * Removes duplicates\n   *\n   * @param personas\n   * @param possibleDupes\n   */\n  private _removeDuplicates = (personas: IPersonaProps[], possibleDupes: IPersonaProps[]): IPersonaProps[] => {\n    return personas.filter(persona => !this._listContainsPersona(persona, possibleDupes));\n  }\n\n  /**\n   * Checks if text starts with\n   *\n   * @param text\n   * @param filterText\n   */\n  private _doesTextStartWith(text: string, filterText: string): boolean {\n    return text.toLowerCase().indexOf(filterText.toLowerCase()) === 0;\n  }\n\n    /**\n   * Checks if text contains\n   *\n   * @param text\n   * @param filterText\n   */\n  private _doesTextContains(text: string, filterText: string): boolean {\n    return text.toLowerCase().indexOf(filterText.toLowerCase()) > 0;\n  }\n\n  /**\n   * Checks if list contains the person\n   *\n   * @param persona\n   * @param personas\n   */\n  private _listContainsPersona = (persona: IPersonaProps, personas: IPersonaProps[]): boolean => {\n    if (!personas || !personas.length || personas.length === 0) {\n      return false;\n    }\n    return personas.filter(item => item.primaryText === persona.primaryText).length > 0;\n  }\n\n  /**\n   * Gets the default users based on the provided email address.\n   * Adds emails that are not found with a random generated User Id\n   *\n   * @param userValuesArray\n   * @param selectedUsers\n   */\n  private getDefaultUsers(userValuesArray : any[], selectedUsers : string[]) : any {\n    let defaultuserValuesArray: any[] = [];\n    for (let i = 0; i < selectedUsers.length; i++) {\n      const obj = { valToCompare: selectedUsers[i] };\n      const length = defaultuserValuesArray.length;\n      defaultuserValuesArray = defaultuserValuesArray.length !== 0  ? defaultuserValuesArray.concat(userValuesArray.filter(this.filterUsers, obj)) : userValuesArray.filter(this.filterUsers, obj);\n      if (length === defaultuserValuesArray.length) {\n        const defaultUnknownUser = [{\n          id: 1000 + i, //just a random number\n          imageUrl: \"\",\n          imageInitials: \"\",\n          primaryText: selectedUsers[i] , //Name\n          secondaryText: selectedUsers[i], //Role\n          tertiaryText: \"\", //status\n          optionalText: \"\" //stgring\n        }];\n        defaultuserValuesArray = defaultuserValuesArray.length !== 0  ? defaultuserValuesArray.concat(defaultUnknownUser) : defaultUnknownUser;\n      }\n    }\n    return defaultuserValuesArray;\n  }\n\n  /**\n   * Filters Users based on email\n   */\n  private filterUsers = function (value: any, index: number, ar: any[]) {\n    if (value.secondaryText.toLowerCase().indexOf(this.valToCompare.toLowerCase()) !== -1) {\n      return value;\n    }\n  };\n\n  /**\n   * Default React component render method\n   */\n  public render(): React.ReactElement<IPeoplePickerProps> {\n    const peoplepicker = (\n      <div id=\"people\" className={`${styles.defaultClass} ${this.props.peoplePickerWPclassName ? this.props.peoplePickerWPclassName : ''}`}>\n        <Label>{this.props.titleText || strings.peoplePickerComponentTitleText}</Label>\n\n        <NormalPeoplePicker pickerSuggestionsProps={suggestionProps}\n                            onResolveSuggestions={this._onPersonFilterChanged}\n                            onEmptyInputFocus={ this._returnMostRecentlyUsedPerson}\n                            getTextFromItem={(peoplePersonaMenu: IPersonaProps) => peoplePersonaMenu.primaryText}\n                            className={`'ms-PeoplePicker' ${this.props.peoplePickerCntrlclassName ? this.props.peoplePickerCntrlclassName : ''}`}\n                            key={'normal'}\n                            onValidateInput={this._validateInputPeople}\n                            removeButtonAriaLabel={'Remove'}\n                            inputProps={{\n                              'aria-label': 'People Picker'\n                            }}\n                            selectedItems={this.state.selectedPersons}\n                            itemLimit={this.props.personSelectionLimit || 1}\n                            disabled={this.props.disabled}\n                            onChange={this._onPersonItemsChange} />\n      </div>\n    );\n\n    return (\n      <div>\n      {\n        this.props.showtooltip ? (\n          <TooltipHost content={this.props.tooltipMessage || strings.peoplePickerComponentTooltipMessage}\n                    id='pntp'\n                    calloutProps={ { gapSpace: 0 } }\n                    directionalHint={this.props.tooltipDirectional || DirectionalHint.leftTopEdge}>\n            {peoplepicker}\n          </TooltipHost>\n        ) : (\n          <div>\n            {peoplepicker}\n          </div>\n        )\n      }\n\n      {\n        (this.props.isRequired && this.state.showmessageerror) && (\n          <MessageBar messageBarType={MessageBarType.error}\n                      isMultiline={false}\n                      className={`${this.props.errorMessageclassName ? this.props.errorMessageclassName : ''}`}>\n            {this.props.errorMessage ? this.props.errorMessage : strings.peoplePickerComponentErrorMessage}\n          </MessageBar>\n        )\n      }\n      </div>\n    );\n  }\n}\n\n\n\n"],"sourceRoot":"../../../src"}