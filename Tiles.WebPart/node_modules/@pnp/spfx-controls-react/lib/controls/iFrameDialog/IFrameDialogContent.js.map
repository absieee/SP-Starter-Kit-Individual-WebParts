{"version":3,"sources":["controls/iFrameDialog/IFrameDialogContent.tsx"],"names":[],"mappings":";;;;;;;;;;;;AAAA,6BAA+B;AAG/B,qFAAuD;AAUvD;;GAEG;AACH;IAAyC,uCAA8C;IAGnF,6BAAY,KAAgC;eACxC,kBAAM,KAAK,CAAC;IAChB,CAAC;IAEM,oCAAM,GAAb;QAAA,iBAIC;QAHG,MAAM,CAAC,CAAC,6BAAK,SAAS,EAAE,yCAAM,CAAC,YAAY,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,EAAC;YAC1E,gCAAQ,GAAG,EAAE,UAAC,MAAM,IAAO,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC,CAAC,CAAC,EAAE,WAAW,EAAE,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,MAAM,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE,GAAI,CACtN,CAAC,CAAC;IACZ,CAAC;IAEO,2CAAa,GAArB;QACI,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,YAAY,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;QAEvE,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC;YAC1B,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC1C,CAAC;QAED,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,UAAU,GAAG,SAAS,CAAC;IAC9C,CAAC;IACL,0BAAC;AAAD,CAtBA,AAsBC,CAtBwC,KAAK,CAAC,SAAS,GAsBvD;AAtBY,kDAAmB","file":"controls/iFrameDialog/IFrameDialogContent.js","sourcesContent":["import * as React from \"react\";\nimport { DialogContent } from \"office-ui-fabric-react\";\n\nimport styles from './IFrameDialogContent.module.scss';\n\nexport interface IIFrameDialogContentProps {\n    url: string;\n    close: () => void;\n    iframeOnLoad?: (iframe: any) => void;\n    width: string;\n    height: string;\n}\n\n/**\n * IFrame Dialog content\n */\nexport class IFrameDialogContent extends React.Component<IIFrameDialogContentProps, {}> {\n    private _iframe: any;\n\n    constructor(props: IIFrameDialogContentProps) {\n        super(props);\n    }\n\n    public render(): JSX.Element {\n        return (<div className={styles.iFrameDialog} style={{ width: this.props.width}}>\n            <iframe ref={(iframe) => { this._iframe = iframe; }} frameBorder={0} src={this.props.url} onLoad={this._iframeOnLoad.bind(this)} style={{ width: this.props.width, height: this.props.height, visibility: 'hidden' }} />\n        </div>);\n    }\n\n    private _iframeOnLoad(): void {\n        this._iframe.contentWindow.frameElement.cancelPopUp = this.props.close;\n\n        if (this.props.iframeOnLoad) {\n            this.props.iframeOnLoad(this._iframe);\n        }\n\n        this._iframe.style.visibility = 'visible';\n    }\n}"],"sourceRoot":"../../../src"}