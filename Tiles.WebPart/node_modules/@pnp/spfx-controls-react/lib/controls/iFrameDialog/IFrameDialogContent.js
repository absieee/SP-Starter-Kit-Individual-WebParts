"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var IFrameDialogContent_module_scss_1 = require("./IFrameDialogContent.module.scss");
/**
 * IFrame Dialog content
 */
var IFrameDialogContent = (function (_super) {
    __extends(IFrameDialogContent, _super);
    function IFrameDialogContent(props) {
        return _super.call(this, props) || this;
    }
    IFrameDialogContent.prototype.render = function () {
        var _this = this;
        return (React.createElement("div", { className: IFrameDialogContent_module_scss_1.default.iFrameDialog, style: { width: this.props.width } },
            React.createElement("iframe", { ref: function (iframe) { _this._iframe = iframe; }, frameBorder: 0, src: this.props.url, onLoad: this._iframeOnLoad.bind(this), style: { width: this.props.width, height: this.props.height, visibility: 'hidden' } })));
    };
    IFrameDialogContent.prototype._iframeOnLoad = function () {
        this._iframe.contentWindow.frameElement.cancelPopUp = this.props.close;
        if (this.props.iframeOnLoad) {
            this.props.iframeOnLoad(this._iframe);
        }
        this._iframe.style.visibility = 'visible';
    };
    return IFrameDialogContent;
}(React.Component));
exports.IFrameDialogContent = IFrameDialogContent;

//# sourceMappingURL=IFrameDialogContent.js.map
