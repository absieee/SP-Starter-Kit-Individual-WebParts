{"version":3,"sources":["webparts/tiles/components/Tiles.tsx"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,KAAK,OAAO,MAAM,qBAAqB,CAAC;AAC/C,OAAO,MAAM,MAAM,qBAAqB,CAAC;AAEzC,OAAO,EAAE,IAAI,EAAE,MAAM,QAAQ,CAAC;AAC9B,OAAO,EAAE,YAAY,EAAE,MAAM,2CAA2C,CAAC;AACzE,OAAO,EAAE,WAAW,EAAE,MAAM,0CAA0C,CAAC;AAGvE;IAA2B,yBAAgC;IAA3D;;IA+BA,CAAC;IA7BC;;OAEG;IACI,sBAAM,GAAb;QAAA,iBAyBC;QAxBC,MAAM,CAAC,CACL,6BAAK,SAAS,EAAG,MAAM,CAAC,KAAK;YAC3B,oBAAC,YAAY,IAAC,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,EACnC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,EACvB,cAAc,EAAE,IAAI,CAAC,KAAK,CAAC,eAAe,GAAI;YAG1D,IAAI,CAAC,KAAK,CAAC,cAAc,IAAI,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,GAAG,CAClE,6BAAK,SAAS,EAAE,MAAM,CAAC,SAAS,IAE5B,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,GAAG,CAAC,UAAC,IAAI,EAAE,GAAG,IAAK,OAAA,oBAAC,IAAI,IAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,KAAI,CAAC,KAAK,CAAC,UAAU,GAAI,EAA7D,CAA6D,CAAC,CAEzG,CACP,GAAG,CACF,oBAAC,WAAW,IACV,QAAQ,EAAC,MAAM,EACf,QAAQ,EAAE,OAAO,CAAC,eAAe,EACjC,WAAW,EAAE,OAAO,CAAC,iBAAiB,EACtC,WAAW,EAAE,OAAO,CAAC,UAAU,EAC/B,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,iBAAiB,GAAI,CAChD,CAEC,CACP,CAAC;IACJ,CAAC;IACH,YAAC;AAAD,CA/BA,AA+BC,CA/B0B,KAAK,CAAC,SAAS,GA+BzC","file":"Tiles.js","sourcesContent":["import * as React from 'react';\r\nimport * as strings from 'TilesWebPartStrings';\r\nimport styles from './Tiles.module.scss';\r\nimport { ITilesProps } from '.';\r\nimport { Tile } from './tile';\r\nimport { WebPartTitle } from '@pnp/spfx-controls-react/lib/WebPartTitle';\r\nimport { Placeholder } from '@pnp/spfx-controls-react/lib/Placeholder';\r\nimport { List } from 'office-ui-fabric-react/lib/components/List';\r\n\r\nexport class Tiles extends React.Component<ITilesProps, {}> {\r\n\r\n  /**\r\n   * Default React remder method\r\n   */\r\n  public render(): React.ReactElement<ITilesProps> {\r\n    return (\r\n      <div className={ styles.tiles }>\r\n        <WebPartTitle displayMode={this.props.displayMode}\r\n                      title={this.props.title}\r\n                      updateProperty={this.props.fUpdateProperty} />\r\n\r\n        {\r\n          this.props.collectionData && this.props.collectionData.length > 0 ? (\r\n            <div className={styles.tilesList}>\r\n              {\r\n                this.props.collectionData.map((tile, idx) => <Tile key={idx} item={tile} height={this.props.tileHeight} />)\r\n              }\r\n            </div>\r\n          ) : (\r\n            <Placeholder\r\n              iconName='Edit'\r\n              iconText={strings.noTilesIconText}\r\n              description={strings.noTilesConfigured}\r\n              buttonLabel={strings.noTilesBtn}\r\n              onConfigure={this.props.fPropertyPaneOpen} />\r\n          )\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":"../../../../../../../src"}